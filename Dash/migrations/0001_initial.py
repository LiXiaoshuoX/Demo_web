# Generated by Django 5.1.6 on 2025-02-10 02:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Menu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32, unique=True)),
            ],
            options={
                "verbose_name": "Menu",
            },
        ),
        migrations.CreateModel(
            name="PermGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32, unique=True)),
                (
                    "menu",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Dash.menu",
                    ),
                ),
            ],
            options={
                "verbose_name": "PermGroup",
            },
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32, unique=True)),
                ("url", models.URLField(max_length=128, unique=True)),
                ("perm_code", models.CharField(max_length=32, unique=True)),
                (
                    "perm_group",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Dash.permgroup",
                    ),
                ),
                (
                    "pid",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Dash.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "Permission",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32, unique=True)),
                (
                    "permissions",
                    models.ManyToManyField(blank=True, to="Dash.permission"),
                ),
            ],
            options={
                "verbose_name": "Role",
            },
        ),
        migrations.CreateModel(
            name="UserInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32, unique=True)),
                ("password", models.CharField(max_length=32)),
                ("role", models.ManyToManyField(blank=True, to="Dash.role")),
            ],
            options={
                "verbose_name": "UserInfo",
            },
        ),
    ]
